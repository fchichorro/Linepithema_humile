function [prdData, info] = predict_Linepithema_humile(par, data, auxData)
% file generated by prt_predict

% unpack par, data, auxData
cPar = parscomp_st(par); vars_pull(par);
v2struct(par); v2struct(cPar); v2struct(data); v2struct(auxData);

% compute temperature correction factors
pars_T = T_A;
TC_Ri = tempcorr(temp.Ri, T_ref, pars_T);
TC_te = tempcorr(temp.te, T_ref, pars_T);
TC_ah = tempcorr(temp.ah, T_ref, pars_T);
TC_am = tempcorr(temp.am, T_ref, pars_T);

% life cycle
pars_tj = [g k v_Hb v_He s_j kap kap_V];
[tau_j, tau_e, tau_b, l_j, l_e, l_b, rho_j, v_Rj, u_Ee, info] = get_tj_hex(pars_tj, f);

if info == 0
  prdData = []; return;
end

% initial
Ww_h = aUL(end,3)^3 * (1 + f * ome); % g, wet weight at hatch
Lw_h = aUL(end,3)/ del_M; % cm, physical length at hatch

% hatch
pars_UE0 = [V_Hb; g; k_J; k_M; v]; % compose parameter vector
U_E0 = initial_scaled_reserve(f, pars_UE0); % d.cm^2, initial scaled reserve
[U_H aUL] = ode45(@dget_aul, [0; U_Hh], [0 U_E0 1e-10], [], kap, v, k_J, g, L_m);
a_h = aUL(end,1)/ TC_ah; % d, age at hatch
Lw_h = aUL(end,3)/ del_M; % cm, physical length at hatch
Ww_h = aUL(end,3)^3 * (1 + f * ome); % g, wet weight at hatch

% emergence
L_e = L_m * l_e; % cm, structural length at emergence
Lw_e = L_e/ del_M; % cm, physical length at emergence
E_Rj = v_Rj * (1 - kap) * g * E_m * L_j^3; % J, reproduction buffer at pupation
E_e = E_Rj + u_Ee * g * E_m * L_m^3;  % J, reserve at emergence
Ww_e = L_e^3 + w_E * E_e/ mu_E/ d_E; % g, wet weight at emergence

% ultimate
pars_tm = [g; l_T; h_a/ k_M^2; s_G]; % compose parameter vector
tau_m = get_tm_s(pars_tm, f, l_b); % -, scaled mean life span
a_m = tau_m/ k_M/ TC_am; % d, mean life span

% reproduction
L_e = L_m * l_e; % cm, structural length at emergence
E_0 = p_Am * U_E0; % J, initial reserve
s_M = l_j/ l_b; % -, acceleration factor
R_i = kap_R * TC_Ri * (p_Am * s_M * L_e^2 - p_M * L_e^3 - k_J * E_He)/ E_0; % #/d, ultimate reproduction rate

% pack to output
prdData.Lh = Lw_h;
prdData.Le = Lw_e;
prdData.Ri = R_i;
prdData.Wwh = Ww_h;
prdData.ah = a_h;
prdData.am = a_m;
prdData.Wwe = Ww_e;

% pack to output

